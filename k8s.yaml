apiVersion : apps/v1
kind: Deployment
metadata:
  name: #{applicationName}# 
spec:
  selector:
    matchLabels: 
      app: #{applicationName}#
  replicas: #{replicas}#
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1        # how many pods we can add at a time
      maxUnavailable: 1  # maxUnavailable define how many pods can be unavailable # during the rolling update
  template:
    metadata:
      labels:
        app: #{applicationName}# 
    spec:     
      containers:
        - name: #{applicationName}# 
          image: #{containerRegistry}#/#{imageRepository}#-#{env}#:#{Build.BuildId}#
          resources:
           limits:
             memory: #{limit-memory}#
             cpu: #{limit-cpu}#
           requests:
             memory: #{request-memory}#
             cpu: #{request-cpu}#          
          imagePullPolicy: Always      
          ports:
            - containerPort: 80
          livenessProbe:
            httpGet:
              path: /healthz
              port: 80
            initialDelaySeconds: #{initialDelaySeconds}#
            periodSeconds: 15
            successThreshold: 1
            failureThreshold: 30
          readinessProbe:
            httpGet:
              path: /healthz
              port: 80
            initialDelaySeconds: #{initialDelaySeconds}#
            periodSeconds: 15
            successThreshold: 1
            failureThreshold: 30
          startupProbe:
            httpGet:
              path: /healthz
              port: 80           
            periodSeconds: 15
            failureThreshold: 30 
          env:
            - name: ASPNETCORE_ENVIRONMENT
              value: #{env}#
---
apiVersion: v1
kind: Service
metadata:
    name: svc-#{applicationName}#
spec:
    selector:
      app: #{applicationName}#
    ports:
      - name: http
        port: 80
    type: ClusterIP #LoadBalancer
